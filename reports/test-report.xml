<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/home/alan/Dokumente/git/markdoc/__tests__/wordcounter.test.js">
    <testCase name="WordCounter should count words in the document" duration="6"/>
    <testCase name="WordCounter shouldn&apos;t count newlines, spaces or tabs" duration="1"/>
    <testCase name="WordCounter shouldn&apos;t count punctuation or other symbols as words" duration="1"/>
    <testCase name="CharacterCounter should count every single character in the document" duration="1"/>
    <testCase name="CharacterCounter should not count spaces" duration="0"/>
    <testCase name="CharacterCounter should count special character" duration="1"/>
    <testCase name="CharacterCounter should show zero, if no it has no text" duration="0"/>
  </file>
  <file path="/home/alan/Dokumente/git/markdoc/__tests__/markdown.test.js">
    <testCase name="InputStream should read strings correctly" duration="6"/>
    <testCase name="InputStream should peek characters correctly" duration="1"/>
    <testCase name="InputStream should detect the end of the string correctly" duration="1"/>
    <testCase name="InputStream should keep track of the string position" duration="0"/>
    <testCase name="InputStream should keep track of the current line and column" duration="1"/>
    <testCase name="InputStream should test regex" duration="1"/>
    <testCase name="InputStream should match regex" duration="0"/>
    <testCase name="InputStream should skip a certain amount of characters" duration="1"/>
    <testCase name="InputStream should skip to the next row(for testing purposes)" duration="1"/>
    <testCase name="Token Regex should match headers appropriately" duration="0"/>
    <testCase name="Token Regex should match blockquotes appropriately" duration="1"/>
    <testCase name="Token Regex should match rules appropriately" duration="1"/>
    <testCase name="Token Regex should match lists appropriately" duration="1"/>
    <testCase name="Token Regex should match code blocks appropriately" duration="0"/>
    <testCase name="Token Regex should match TOCs appropriately" duration="0"/>
    <testCase name="Token Regex should match TOFs appropriately" duration="1"/>
    <testCase name="Token Regex should match pagebreaks appropriately" duration="0"/>
    <testCase name="Token Regex should match references appropriately" duration="0"/>
    <testCase name="Token Regex should match latex blocks appropriately" duration="1"/>
    <testCase name="Token Regex should match newlines appropriately" duration="0"/>
    <testCase name="Token Regex should match bold text indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match italics text indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match strikethrough text indicators appropriately" duration="1"/>
    <testCase name="Token Regex should match image start indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match link start indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match image-/link-inline indicators appropriately" duration="1"/>
    <testCase name="Token Regex should match image-/link-inline indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match image-/link-end indicators appropriately" duration="1"/>
    <testCase name="Token Regex should match code indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match latex indicators appropriately" duration="0"/>
    <testCase name="Token Regex should match latex indicators appropriately" duration="0"/>
    <testCase name="TokenStream should find the correct amount of tokens" duration="1"/>
    <testCase name="TokenStream should tokenize to the correct types" duration="0"/>
    <testCase name="TokenStream should record the correct columns and rows" duration="2"/>
    <testCase name="TokenStream should find proper header tokens" duration="2"/>
    <testCase name="TokenStream should find proper blockquotes" duration="3"/>
    <testCase name="TokenStream should find proper rules" duration="1"/>
    <testCase name="TokenStream should find proper lists" duration="1"/>
    <testCase name="TokenStream should find proper code blocks" duration="1"/>
    <testCase name="TokenStream should find proper TOCs" duration="1"/>
    <testCase name="TokenStream should find proper TOFs" duration="0"/>
    <testCase name="TokenStream should find proper pagebreaks" duration="0"/>
    <testCase name="TokenStream should find proper references" duration="1"/>
    <testCase name="TokenStream should find proper LaTeX blocks" duration="0"/>
    <testCase name="TokenStream should find proper newlines" duration="1"/>
    <testCase name="TokenStream should find proper bold indicators" duration="1"/>
    <testCase name="TokenStream should find proper italics indicators" duration="0"/>
    <testCase name="TokenStream should find proper strikethrough indicators" duration="1"/>
    <testCase name="TokenStream should find proper image start indicators" duration="0"/>
    <testCase name="TokenStream should find proper link start indicators" duration="0"/>
    <testCase name="TokenStream should find proper image-/link inline indicators" duration="1"/>
    <testCase name="TokenStream should find proper image-/link reference indicators" duration="0"/>
    <testCase name="TokenStream should find proper image-/link end indicators" duration="1"/>
    <testCase name="TokenStream should find proper code indicators" duration="0"/>
    <testCase name="TokenStream should find proper latex indicators" duration="1"/>
    <testCase name="TokenStream should find proper latex indicators" duration="0"/>
    <testCase name="TokenStream should skip to the next row(for testing purposes)" duration="1"/>
    <testCase name="Parser should parse the right amount of components" duration="3"/>
    <testCase name="Parser should parse headers" duration="1"/>
    <testCase name="Parser should parse block quotes" duration="2"/>
    <testCase name="Parser should parse list heads" duration="3"/>
    <testCase name="Parser should parse list items" duration="2"/>
    <testCase name="Parser should parse lists" duration="2"/>
    <testCase name="Parser should parse LaTeX blocks" duration="1"/>
    <testCase name="Parser should parse Code blocks" duration="4"/>
  </file>
</testExecutions>